{
	"info": {
		"_postman_id": "22080e3b-f075-4bd5-9525-060b459d5514",
		"name": "YaMDb API logic",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "15416174"
	},
	"item": [
		{
			"name": "auth/",
			"item": [
				{
					"name": "Юзернейм 'me' при аутентификации",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Нельзя использовать `me`. Статус 400.\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"{{email}}\",\n    \"username\": \"me\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{API_URL}}/api/v1/auth/signup/",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"signup",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Уникальный username при аутентификации",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Нельзя повторно регистрировать email. Статус 400.\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"random@mail.ru\",\n    \"username\": \"{{username}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{API_URL}}/api/v1/auth/signup/",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"signup",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Уникальный email при аутентификации",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Нельзя повторно регистрировать username. Статус 400.\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"{{email}}\",\n    \"username\": \"not_unique_email\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{API_URL}}/api/v1/auth/signup/",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"signup",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Недопустимые символовы в username",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Нельзя использовать недопустимые символы в username. Статус 400.\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"{{email}}\",\n    \"username\": \"@!=\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{API_URL}}/api/v1/auth/signup/",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"signup",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Некорректный confirmation_code",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Неверный `confirmatiom_code`. Статус 400.\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"{{username}}\",\n  \"confirmation_code\": \"incorrect_code\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{API_URL}}/api/v1/auth/token/",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"token",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "users/",
			"item": [
				{
					"name": "me/",
					"item": [
						{
							"name": "Переназначение роли",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Роль не переназначается\", () => {",
											"  const responseJson = pm.response.json();",
											"  pm.expect(responseJson.role).to.not.eql(\"moderator\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"{{username}}\",\n  \"email\": \"{{email}}\",\n  \"first_name\": \"Иванов\",\n  \"last_name\": \"Петр\",\n  \"bio\": \"студент\",\n  \"role\": \"moderator\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{API_URL}}/api/v1/users/me/",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"api",
										"v1",
										"users",
										"me",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Смена юзернейма на 'me'",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Статус 400. Нельзя использовать юзернейм `me`.\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"me\",\n  \"email\": \"{{email}}\",\n  \"first_name\": \"Иванов\",\n  \"last_name\": \"Петр\",\n  \"bio\": \"студент\",\n  \"role\": \"moderator\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{API_URL}}/api/v1/users/me/",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"api",
										"v1",
										"users",
										"me",
										""
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Создание пользователя",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"{{another_username}}\", \n  \"email\": \"{{another_email}}\",\n  \"first_name\": \"string\",\n  \"last_name\": \"string\",\n  \"bio\": \"string\",\n  \"role\": \"user\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{API_URL}}/api/v1/users/",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								""
							]
						},
						"description": "с токеном"
					},
					"response": []
				},
				{
					"name": "Запрет создания пользователя с одинаковым юзернеймом",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Нельзя создать пользователя с одинаковым юзернеймом\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"{{another_username}}\", \n  \"email\": \"random@mail.ru\",\n  \"first_name\": \"string\",\n  \"last_name\": \"string\",\n  \"bio\": \"string\",\n  \"role\": \"user\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{API_URL}}/api/v1/users/",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								""
							]
						},
						"description": "с токеном"
					},
					"response": []
				},
				{
					"name": "Запрет создания пользователя с одинаковой почтой",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Нельзя создать пользователя с одинаковой почтой\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"random_username\", \n  \"email\": \"{{another_email}}\",\n  \"first_name\": \"string\",\n  \"last_name\": \"string\",\n  \"bio\": \"string\",\n  \"role\": \"user\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{API_URL}}/api/v1/users/",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								""
							]
						},
						"description": "с токеном"
					},
					"response": []
				},
				{
					"name": "Пользователь с таким юзернеймом есть в БД",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Нельзя изменить юзернейм пользователя на имеющийся в БД\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"{{username}}\",\n  \"email\": \"random@example.com\",\n  \"first_name\": \"patch_string\",\n  \"last_name\": \"patch_string\",\n  \"bio\": \"patch_string\",\n  \"role\": \"admin\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{API_URL}}/api/v1/users/{{another_username}}/",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"{{another_username}}",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Пользователь с такой почтой есть в БД",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Нельзя изменить почту пользователя на имеющуюся в БД\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"{{another_username}}\",\n  \"email\": \"{{email}}\",\n  \"first_name\": \"patch_string\",\n  \"last_name\": \"patch_string\",\n  \"bio\": \"patch_string\",\n  \"role\": \"admin\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{API_URL}}/api/v1/users/{{another_username}}/",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"{{another_username}}",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Удаление пользователя",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{API_URL}}/api/v1/users/{{another_username}}/",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"{{another_username}}",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "categories",
			"item": [
				{
					"name": "Создать категорию",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"{{categories_name}}\",\n  \"slug\": \"{{categories_slug}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{API_URL}}/api/v1/categories/",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"api",
								"v1",
								"categories",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "genres/",
			"item": [
				{
					"name": "Создать жанр",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"{{genre_name}}\",\n  \"slug\": \"{{genre_slug}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{API_URL}}/api/v1/genres/",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"api",
								"v1",
								"genres",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "title/",
			"item": [
				{
					"name": "Отрицательный год",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"var is201Response = responseCode.code === 201;",
									"",
									"if(is201Response){",
									"    var title = pm.response.json();",
									"",
									"    pm.test(\"Есть поле 'year'\", function () {",
									"        pm.expect(title).to.have.property('year');",
									"    });",
									"",
									"    pm.test(\"Можно установить отрицательный год\", () => {",
									"        pm.expect(title.year).to.eql(-1);",
									"    });",
									"    ",
									"    pm.test(\"'title_id' установлен в environment\", function () {",
									"        pm.environment.set(\"title_id\",title.id);",
									"    });",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"{{title_name}}\",\n  \"year\": -1,\n  \"description\": \"description about \",\n  \"genre\": [\n    \"{{genre_slug}}\"\n  ],\n  \"category\": \"{{categories_slug}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{API_URL}}/api/v1/titles/",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"api",
								"v1",
								"titles",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Фильтрация по category__slug",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var is200Response = responseCode.code === 200;",
									"",
									"if (is200Response) {",
									"    var data = pm.response.json();",
									"    if (data.results.length) {",
									"        var title = data.results[0]",
									"        if (title.category) {",
									"            var category = title.category",
									"",
									"            pm.test(\"Фильтруется по категории \", function () {",
									"                pm.expect(category.slug).to.eql(pm.environment.get(\"categories_slug\"));",
									"            });",
									"        }",
									"    };",
									"};"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/api/v1/titles/?category={{categories_slug}}",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"api",
								"v1",
								"titles",
								""
							],
							"query": [
								{
									"key": "category",
									"value": "{{categories_slug}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Фильтрация по genre__slug",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var is200Response = responseCode.code === 200;",
									"",
									"if(is200Response){",
									"    var data = pm.response.json();",
									"    if (data.results.length){",
									"        var title = data.results[0]",
									"    ",
									"",
									"        if (title.genre.length){",
									"            var genre = title.genre[0]",
									"",
									"            pm.test(\"Фильтруется по жанрам \", function () {",
									"                pm.expect(genre.slug).to.eql(pm.environment.get(\"genre_slug\"));",
									"            });",
									"        };",
									"    };",
									"};"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/api/v1/titles/?genre={{genre_slug}}",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"api",
								"v1",
								"titles",
								""
							],
							"query": [
								{
									"key": "genre",
									"value": "{{genre_slug}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Фильтрация по name",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var is200Response = responseCode.code === 200;",
									"",
									"if(is200Response){",
									"    var data = pm.response.json();",
									"    if (data.results.length){",
									"        var title = data.results[0]",
									"        pm.test(\"Фильтрация по имени произведения\", () => {",
									"            pm.expect(title.name).to.be.eql(pm.environment.get(\"title_name\"));",
									"        });",
									"    };",
									"};"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/api/v1/titles/?name={{title_name}}",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"api",
								"v1",
								"titles",
								""
							],
							"query": [
								{
									"key": "name",
									"value": "{{title_name}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Отрицательный год",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var is200Response = responseCode.code === 200;",
									"",
									"if(is200Response){",
									"    var title = pm.response.json();",
									"",
									"    pm.test(\"Можно установить отрицательный год\", () => {",
									"        pm.expect(title.year).to.eql(-1);",
									"    });",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"patch_name\",\n  \"year\": -1,\n  \"description\": \"patch_description\",\n  \"genre\": [\n    \"{{genre_slug}}\"\n  ],\n  \"category\": \"{{categories_slug}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{API_URL}}/api/v1/titles/{{title_id}}/",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"api",
								"v1",
								"titles",
								"{{title_id}}",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT запрещен",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 405\", function () {",
									"    pm.response.to.have.status(405);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"patch_name\",\n  \"year\": -1,\n  \"description\": \"patch_description\",\n  \"genre\": [\n    \"{{genre_slug}}\"\n  ],\n  \"category\": \"{{categories_slug}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{API_URL}}/api/v1/titles/{{title_id}}/",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"api",
								"v1",
								"titles",
								"{{title_id}}",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "titles/{{title_id}}/reviews/",
			"item": [
				{
					"name": "Создание ревью",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"var is201Response = responseCode.code === 201;",
									"",
									"if(is201Response){",
									"    var review = pm.response.json();",
									"",
									"    pm.test(\"'review_id' установлен в environment\", function () {",
									"        pm.environment.set(\"review_id\",review.id);",
									"    });",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"text\": \"string\",\n  \"score\": 10\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{API_URL}}/api/v1/titles/{{title_id}}/reviews/",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"api",
								"v1",
								"titles",
								"{{title_id}}",
								"reviews",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Повторное ревью на тоже произведение",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Повторное ревью запрещено\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"text\": \"string\",\n  \"score\": 10\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{API_URL}}/api/v1/titles/{{title_id}}/reviews/",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"api",
								"v1",
								"titles",
								"{{title_id}}",
								"reviews",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT запрещен",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 405\", function () {",
									"    pm.response.to.have.status(405);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"text\": \"string2\",\n  \"score\": 5\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{API_URL}}/api/v1/titles/{{title_id}}/reviews/{{review_id}}/",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"api",
								"v1",
								"titles",
								"{{title_id}}",
								"reviews",
								"{{review_id}}",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "titles/{{title_id}}/reviews/{{review_id}}/comments/",
			"item": [
				{
					"name": "Создание комментария",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"var is201Response = responseCode.code === 201;",
									"",
									"if(is201Response){",
									"    var comment = pm.response.json();",
									"",
									"    pm.test(\"'comment_id' установлен в environment\", function () {",
									"        pm.environment.set(\"comment_id\",comment.id);",
									"    });",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"text\": \"string\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{API_URL}}/api/v1/titles/{{title_id}}/reviews/{{review_id}}/comments/",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"api",
								"v1",
								"titles",
								"{{title_id}}",
								"reviews",
								"{{review_id}}",
								"comments",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT запрещен",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 405\", function () {",
									"    pm.response.to.have.status(405);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"text\": \"text_comment\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{API_URL}}/api/v1/titles/{{title_id}}/reviews/{{review_id}}/comments/{{comment_id}}/",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"api",
								"v1",
								"titles",
								"{{title_id}}",
								"reviews",
								"{{review_id}}",
								"comments",
								"{{comment_id}}",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Удаление объектов после тестов",
			"item": [
				{
					"name": "Удаление комментария",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{API_URL}}/api/v1/titles/{{title_id}}/reviews/{{review_id}}/comments/{{comment_id}}/",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"api",
								"v1",
								"titles",
								"{{title_id}}",
								"reviews",
								"{{review_id}}",
								"comments",
								"{{comment_id}}",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Удаление ревью",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{API_URL}}/api/v1/titles/{{title_id}}/reviews/{{review_id}}/",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"api",
								"v1",
								"titles",
								"{{title_id}}",
								"reviews",
								"{{review_id}}",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Удаление произведения",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"patch_name\",\n  \"year\": -1,\n  \"description\": \"patch_description\",\n  \"genre\": [\n    \"{{genre_slug}}\"\n  ],\n  \"category\": \"{{categories_slug}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{API_URL}}/api/v1/titles/{{title_id}}/",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"api",
								"v1",
								"titles",
								"{{title_id}}",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Удаление категории",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{API_URL}}/api/v1/categories/{{categories_slug}}/",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"api",
								"v1",
								"categories",
								"{{categories_slug}}",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Удаление жанра",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{API_URL}}/api/v1/genres/{{genre_slug}}/",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"api",
								"v1",
								"genres",
								"{{genre_slug}}",
								""
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"variable": [
		{
			"key": "app_token",
			"value": ""
		}
	]
}